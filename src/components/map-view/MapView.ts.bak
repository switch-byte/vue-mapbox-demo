import { defineComponent, onMounted, ref, watch } from 'vue';
import { useMap, usePlaces } from '@/composables';

import Mapboxgl from 'mapbox-gl';

export default defineComponent({
  name: 'MapView',
  setup() {
    const mapElement = ref<HTMLDivElement>();
    const { userLocation, isUserLocationReady } = usePlaces();
    const { setMap } = useMap();

    const initMap = async () => {
      if (!mapElement.value) throw new Error('Container does not exist');
      if (!userLocation.value) throw new Error('User location does not exist');

      await Promise.resolve();

      const map = new Mapboxgl.Map({
        container: mapElement.value,
        // style: 'mapbox://styles/fly0619/cl9p28vct002m14p0t0bjhp2i',
        style: 'mapbox://styles/fly0619/cl9ppw2r7000o15nwddv49c7j',
        center: userLocation.value,
        // zoom: 15,
        // 设置缩放级别，对应缩放级别可以看到（0:地球、3:一个大陆、4:大岛、6:大河流、10:大型道路、15:建筑物）
        zoom: 1,
      });

      const myLocationPopUp = new Mapboxgl.Popup().setLngLat(userLocation.value).setHTML(`
				<h4>Here I am</h4>
				<p>Currently in Valencia</p>
			`);

      new Mapboxgl.Marker().setLngLat(userLocation.value).setPopup(myLocationPopUp).addTo(map);
      setMap(map);
    };

    onMounted(() => {
      if (isUserLocationReady.value) initMap();
    });

    watch(isUserLocationReady, (newValue) => {
      if (isUserLocationReady.value) initMap();
    });

    return {
      isUserLocationReady,
      mapElement,
    };
  },
});
